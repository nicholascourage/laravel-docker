server {
  listen *:80;
  server_name laravel-docker.local;
  return 301 https://$host$request_uri;
}

upstream php-app {
    server php:9000;
}

server {
	listen *:443 ssl;
	server_name laravel-docker.local;
	add_header X-UA-Compatible "IE=Edge,chrome=1";
	ssl_certificate /etc/nginx/ssl/cert.pem;
	ssl_certificate_key /etc/nginx/ssl/key.pem;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 5m;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers
	"ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
	ssl_prefer_server_ciphers on;
	client_header_timeout 3000;
	client_body_timeout 3000;
	fastcgi_read_timeout 3000;
	client_max_body_size 32m;
	fastcgi_buffers 8 128k;
	fastcgi_buffer_size 128k;
	index index.html index.htm index.php app_dev.php;

	root /var/www/laravel-docker-app/public;

	location / {
		# try to serve file directly, fallback to app.php
		#try_files $uri /app_dev.php$is_args$args;
		try_files $uri /index.php$is_args$args;
	}
	# DEV
	# This rule should only be placed on your development environment
	# In production, don't include this and don't deploy app_dev.php or config.php
	location ~ ^/(index)\.php(/|$) {
		fastcgi_pass php-app;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;
		# When you are using symlinks to link the document root to the
		# current version of your application, you should pass the real
		# application path instead of the path to the symlink to PHP
		# FPM.
		# Otherwise, PHP's OPcache may not properly detect changes to
		# your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
		# for more information).
		fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
		fastcgi_param DOCUMENT_ROOT $realpath_root;
		fastcgi_param APP_ENV "dev";
		fastcgi_param APP_DEBUG "true";
		fastcgi_param APP_ORIGIN_DOCKER fastcgi_pass;
	}

	location ~ \.php$ {
		return 301 https://$host;
	}

	error_log /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;
}

